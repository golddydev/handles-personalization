spending handles_personalization

// Should the Reference Token datum be Datum of this SC? i.e. locked to this SC
// Does someone have to sign for the reference token (based on answer above?)
// Or can it simply be the datum of an input UTxO?
// How can we support Sundae updating datum?
// Test CID compared to data
// Test reading datum from Handle datum input (i.e. accepted handle backgrounds)
// Input list of valid contract addresses or assigned GUID
// input list of valid admin signatures
// Spending vs Minting script?

this_sc_id=fhfhwdjfhgi23y98y234
enum Redeemer {
    UPDATE_NFT_HANDLE
    UPDATE_VIRTUAL_SUBHANDLE
    ISSUE_VIRTUAL_SUBHANDLE
    REVOKE_VIRTUAL_SUBHANDLE
    ADMIN_UPDATE
    VENDOR_INFO_UPDATED
}

func main(redeemer: Redeemer, ctx: ScriptContext) -> Bool {
    isAuthorized()
    isKoraFeePaid()
    redeemer.switch {
        pzation: UPDATE_NFT_HANDLE => {
            areNftAssetsValid()
            isHandleStandardValid()
        },
        pzation: UPDATE_VIRTUAL_SUBHANDLE => {
            areNftAssetsValid()
            isHandleStandardValid()
        },
        subhandle: ISSUE_VIRTUAL_SUBHANDLE => {
            isRootHandle()
            isSubHandleDatumValid()
        },
        subhandle: REVOKE_VIRTUAL_SUBHANDLE => {
            isRootHandle()
        }
    }
}

function isAuthorized() -> Bool {
    // User Token as input or from Authorized admin handles UTxO
    // Reference Token as input
    // Reference Token back to Kora
    // Reference Token same name as User Token
    // It is signed by handle owner
}

function isKoraFeePaid() -> Bool {
    // x.x% to Kora address
    // y.y% to DAO Treasury
}

function areNftAssetsValid() -> Bool {
    // If PFP, is it in the inputs and is it output to same address
        // Is it from approved PFP collections list
    // If Background, is it in the inputs and is it output to same address
        // Is it from approved backgrounds collections list
}

function isHandleStandardValid() -> Bool {
    // JSON string encodes same CID
    // Datum on output
    // JSON values are valid
        // CNFT attributes are not modified (name, image, attributes, mediaType, og)
        // Kora attributes are not modified (publisher, terms, version)
        // original_nft_image not modified

}

function isRootHandle() -> Bool {
    // Name has (222) asset_name_label and no `@` symbol

}

function isSubHandleDatumValid() -> Bool {
    // Name has (222) asset_name_label and no `@` symbol

}